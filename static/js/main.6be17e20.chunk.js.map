{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","seachfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAhBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAEzB,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCYLK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEVC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAEKT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOrB,OACI,8BACKH,KCEEI,EAjBG,SAAC,GAAgC,EAA9BC,WAA+B,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKX,UAAU,MAAf,SAEI,uBACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,YAAaC,OAAQ,SAA/D,SACKJ,EAAMK,YCqDJC,G,wDAlDX,aAAgB,IAAD,8BACX,gBAqBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEf,WAAYc,EAAME,OAAOC,SArBzC,EAAKC,MAAQ,CAETxB,OAAQ,GACRM,WAAY,IALL,E,qDAUf,WAAqB,IAAD,OAChBmB,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEvBF,MAAK,SAAAG,GACF,EAAKR,SAAS,CAAErB,OAAQ6B,S,oBAahC,WAAU,IAAD,OACCC,EAAiBC,KAAKP,MAAMxB,OAAOgC,QAAO,SAAAhC,GAC5C,OAAOA,EAAOP,KAAKwC,cAAcC,SAAS,EAAKV,MAAMlB,WAAW2B,kBAGpE,OACI,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,2BAEA,cAAC,EAAD,CAAWW,aAAcwB,KAAKZ,iBAE9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAQ8B,a,GA1CpBK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6be17e20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\r\n    return (\r\n        \r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n   \r\n    const cardComponent = robots.map((user, i) => {\r\n        return <Card \r\n                    key={i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email}\r\n                />\r\n        }) \r\n        \r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ seachfield, searchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            \r\n            <input \r\n                className=\"pa2 ba b--creen bg-lightest-blue\"\r\n                type=\"search\" \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n\r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: \"scroll\", border: \"1px solid\", height: \"800px\" }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Scroll;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            \r\n            robots: [],\r\n            seachfield: \"\"\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response=> {\r\n                return response.json();\r\n        })\r\n        .then(users => {\r\n            this.setState({ robots: users })\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ seachfield: event.target.value })\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.seachfield.toLowerCase())\r\n        })\r\n\r\n        return(\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">Robot Friends</h1>\r\n                \r\n                <SearchBox searchChange={this.onSearchChange} />\r\n\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n        \r\n            \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./containers/App\"\n\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n//import { robots } from \"./robots\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}